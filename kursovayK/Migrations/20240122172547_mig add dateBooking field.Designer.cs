// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using kursovayK.models;

#nullable disable

namespace kursovayK.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240122172547_mig add dateBooking field")]
    partial class migadddateBookingfield
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("kursovayK.models.Auditorium", b =>
                {
                    b.Property<int>("AuditoriumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditoriumId"));

                    b.Property<int>("AmountSeats")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuditoriumId");

                    b.ToTable("Auditoriums");
                });

            modelBuilder.Entity("kursovayK.models.BookedHour", b =>
                {
                    b.Property<int>("BookedHourId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookedHourId"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<int>("HourForBookingId")
                        .HasColumnType("int");

                    b.HasKey("BookedHourId");

                    b.HasIndex("BookingId");

                    b.HasIndex("HourForBookingId")
                        .IsUnique();

                    b.ToTable("BookedHours");
                });

            modelBuilder.Entity("kursovayK.models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateBooking")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalCost")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("ClientId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("kursovayK.models.Client", b =>
                {
                    b.Property<int>("ClietnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClietnId"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FIO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumbee")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClietnId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("kursovayK.models.Computer", b =>
                {
                    b.Property<int>("ComputerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComputerId"));

                    b.Property<string>("GamingChair")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Headphones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Keyboard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mouse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Processor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoCard")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ComputerId");

                    b.ToTable("Computers");
                });

            modelBuilder.Entity("kursovayK.models.HourForBooking", b =>
                {
                    b.Property<int>("HourForBookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HourForBookingId"));

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Hour")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SeatId")
                        .HasColumnType("int");

                    b.HasKey("HourForBookingId");

                    b.HasIndex("SeatId");

                    b.HasIndex("Date", "SeatId", "Hour")
                        .IsUnique()
                        .HasFilter("[Hour] IS NOT NULL");

                    b.ToTable("HoursForBooking");
                });

            modelBuilder.Entity("kursovayK.models.Seat", b =>
                {
                    b.Property<int>("SeatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeatId"));

                    b.Property<int>("AuditoriumId")
                        .HasColumnType("int");

                    b.Property<int>("ComputerId")
                        .HasColumnType("int");

                    b.HasKey("SeatId");

                    b.HasIndex("AuditoriumId");

                    b.HasIndex("ComputerId");

                    b.ToTable("Seats");
                });

            modelBuilder.Entity("kursovayK.models.BookedHour", b =>
                {
                    b.HasOne("kursovayK.models.Booking", "Booking")
                        .WithMany("BookedHours")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("kursovayK.models.HourForBooking", "HourForBooking")
                        .WithOne("BookedHour")
                        .HasForeignKey("kursovayK.models.BookedHour", "HourForBookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("HourForBooking");
                });

            modelBuilder.Entity("kursovayK.models.Booking", b =>
                {
                    b.HasOne("kursovayK.models.Client", "Client")
                        .WithMany("Bookings")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("kursovayK.models.HourForBooking", b =>
                {
                    b.HasOne("kursovayK.models.Seat", "Seat")
                        .WithMany("HoursForBooking")
                        .HasForeignKey("SeatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seat");
                });

            modelBuilder.Entity("kursovayK.models.Seat", b =>
                {
                    b.HasOne("kursovayK.models.Auditorium", "Auditorium")
                        .WithMany("Seats")
                        .HasForeignKey("AuditoriumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("kursovayK.models.Computer", "Computer")
                        .WithMany("Seats")
                        .HasForeignKey("ComputerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auditorium");

                    b.Navigation("Computer");
                });

            modelBuilder.Entity("kursovayK.models.Auditorium", b =>
                {
                    b.Navigation("Seats");
                });

            modelBuilder.Entity("kursovayK.models.Booking", b =>
                {
                    b.Navigation("BookedHours");
                });

            modelBuilder.Entity("kursovayK.models.Client", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("kursovayK.models.Computer", b =>
                {
                    b.Navigation("Seats");
                });

            modelBuilder.Entity("kursovayK.models.HourForBooking", b =>
                {
                    b.Navigation("BookedHour");
                });

            modelBuilder.Entity("kursovayK.models.Seat", b =>
                {
                    b.Navigation("HoursForBooking");
                });
#pragma warning restore 612, 618
        }
    }
}
